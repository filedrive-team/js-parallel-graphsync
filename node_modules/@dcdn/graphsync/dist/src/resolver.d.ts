import { CID } from "multiformats";
import PeerId from "peer-id";
import type { Multiaddr } from "multiaddr";
import { LinkLoader, SelectorNode } from "./traversal";
import type { GraphSync } from "./graphsync";
export declare function toPathComponents(path?: string): string[];
export declare function parsePath(path: string): {
    root: CID;
    segments: string[];
};
export declare function unixfsPathSelector(path: string): {
    root: CID;
    selector: SelectorNode;
};
export declare function getPeerID(addr: Multiaddr): PeerId;
export declare function resolve(root: CID, selector: SelectorNode, loader: LinkLoader): AsyncIterable<Uint8Array>;
declare type FetchInit = {
    headers: {
        [key: string]: string;
    };
    provider: Multiaddr;
    exchange: GraphSync;
    voucher?: any;
    voucherType?: string;
};
/**
 * Convenience method for consuming graphsync content as an HTTP Response object.
 * fecth also supports authenticating requests via the data-transfer protocol used by Filecoin.
 * Please note that it doesn't support revalidation.
 */
export declare function fetch(url: string, init: FetchInit): Promise<Response>;
export {};
//# sourceMappingURL=resolver.d.ts.map